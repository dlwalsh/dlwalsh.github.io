{"version":3,"sources":["components/tally.styles.js","hooks/use-districts.js","utils/slug.js","data.js","components/tally.js","app.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","color","paddingTop","paddingBottom","Select","MaterialSelect","StarFilled","MaterialStar","amber","StarBorder","MaterialStarBorder","A700","TableRow","MaterialTableRow","_ref","party","backgroundColor","ALP","red","LNP","blue","GRN","green","OTH","brown","Chip","MaterialChip","_ref2","concat","UND","grey","GenericIcon","fontSize","lineHeight","useTabsClasses","makeStyles","flexContainer","justifyContent","indicator","useTabClasses","useTopBarClasses","colorPrimary","useBottomBarClasses","colorSecondary","padding","positionFixed","top","bottom","root","flexDirection","annotateInitialState","pipe","map","d","assoc","str","name","slugify","replacement","remove","lower","reduce","record","id","setParty","set","lensPath","toggleFeatured","over","not","districts","incumbent","featured","filterChanging","filter","dist","filterUndecided","propEq","filterFeatured","prop","lengthWhere","length","storage","localStorage","getItem","Tally","_useDistricts","rawInitialState","initialState","_useState","useState","_useState2","Object","slicedToArray","state","setState","values","onPartyChange","onToggleFeatured","useDistricts","JSON","parse","rawDistricts","filterValue","setFilterValue","filteredDistricts","useMemo","topBarClasses","bottomBarClasses","tabClasses","tabsClasses","useEffect","setItem","stringify","react_default","a","createElement","index_es","position","classes","value","onChange","event","scrollButtons","label","icon","icons_index_es","key","component","scope","native","target","onClick","App","tally","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","app","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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DhB,KAAM,SACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,cACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,WACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,WACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,YACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,QACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,aACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,SACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,YACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,UACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,WACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,YACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,aACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,YACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,UACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,aACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,UACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,QACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,QACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,UACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,cACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,iBACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,UACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,YACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,UACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,YACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,cACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,mBACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,WACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,QACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,WACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,UACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,SACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,eACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,SACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,SACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,cACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,YACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,UACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,cACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,sBACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,SACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,SACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,QACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,aACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,UACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,YACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,iBACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,gBACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,WACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,aACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,WACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,OACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,cACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,eACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,cACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,cACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,cACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,UACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,SACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,WACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,WACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,eACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,QACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,eACNe,UAAW,MACXxD,MAAO,GACPyD,UAAU,GACT,CACDhB,KAAM,WACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,cACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,YACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAAM,WACNe,UAAW,MACXxD,MAAO,MACPyD,UAAU,GACT,CACDhB,KAA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","file":"static/js/main.02dd6a0f.chunk.js","sourcesContent":["import { makeStyles, styled } from \"@material-ui/styles\";\nimport {\n  Chip as MaterialChip,\n  Select as MaterialSelect,\n  TableRow as MaterialTableRow,\n} from \"@material-ui/core\";\nimport {\n  Star as MaterialStar,\n  StarBorder as MaterialStarBorder,\n} from \"@material-ui/icons\";\nimport { amber, blue, brown, green, grey, red } from \"@material-ui/core/colors\";\n\nexport const Wrapper = styled(\"div\")({\n  color: \"black\",\n  paddingTop: 72,\n  paddingBottom: 60,\n});\n\nexport const Select = styled(MaterialSelect)({});\n\nexport const StarFilled = styled(MaterialStar)({\n  color: amber[500],\n});\n\nexport const StarBorder = styled(MaterialStarBorder)({\n  color: amber.A700,\n});\n\nexport const TableRow = styled(MaterialTableRow)(\n  ({ party }) => ({\n    backgroundColor: {\n      ALP: red[100],\n      LNP: blue[100],\n      GRN: green[100],\n      OTH: brown[100],\n    }[party] || \"transparent\",\n  }),\n);\n\nexport const Chip = styled(MaterialChip)(\n  ({ party }) => ({\n    backgroundColor: {\n      LNP: `${blue[500]} !important`,\n      ALP: `${red[500]} !important`,\n      GRN: `${green[500]} !important`,\n      OTH: `${brown[500]} !important`,\n      UND: `${grey[500]} !important`,\n    }[party],\n    color: \"white !important\",\n  }),\n);\n\nexport const GenericIcon = styled(\"span\")({\n  fontSize: \"1.6em\",\n  lineHeight: 1.2,\n});\n\nexport const useTabsClasses = makeStyles({\n  flexContainer: {\n    justifyContent: \"space-around\",\n  },\n  indicator: {\n    backgroundColor: `${amber[500]} !important`,\n  },\n});\n\nexport const useTabClasses = makeStyles({});\n\nexport const useTopBarClasses = makeStyles({\n  colorPrimary: {\n    backgroundColor: \"black !important\",\n  },\n});\n\nexport const useBottomBarClasses = makeStyles({\n  colorSecondary: {\n    backgroundColor: `${grey[200]} !important`,\n    color: \"black !important\",\n    padding: 12,\n  },\n  positionFixed: {\n    top: \"auto !important\",\n    bottom: 0,\n  },\n  root: {\n    flexDirection: \"row !important\",\n    justifyContent: \"space-around !important\",\n  },\n});\n","import { useState } from \"react\";\nimport { assoc, lensPath, map, not, over, pipe, reduce, set, values } from \"ramda\";\nimport { slug } from \"../utils/slug\";\n\nconst annotateInitialState = pipe(\n  map(d => assoc(\"id\", slug(d.name), d)),\n  reduce(\n    (record, d) => assoc(d.id, d, record),\n    {},\n  ),\n);\n\nconst setParty = (id, party) => set(\n  lensPath([id, \"party\"]),\n  party,\n);\n\nconst toggleFeatured = id => over(\n  lensPath([id, \"featured\"]),\n  not,\n);\n\nexport function useDistricts(rawInitialState) {\n  const initialState = annotateInitialState(rawInitialState);\n  const [state, setState] = useState(initialState);\n\n  return {\n    districts: values(state),\n    onPartyChange(id, party) {\n      setState(setParty(id, party));\n    },\n    onToggleFeatured(id) {\n      setState(toggleFeatured(id));\n    },\n  };\n}\n","import slugify from \"slugify\";\n\nexport function slug(str) {\n  return slugify(str, {\n    replacement: \"-\",\n    remove: /[*+~.()'\"!:@]/g,\n    lower: true,\n  });\n}\n","export const storageKey = \"NSW_2019_1550966428001\";\n\nexport const districts = [{\n  name: \"Albury\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Auburn\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Ballina\",\n  incumbent: \"GRN\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Balmain\",\n  incumbent: \"GRN\",\n  party: \"GRN\",\n  featured: false,\n}, {\n  name: \"Bankstown\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Barwon\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Bathurst\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Baulkham Hills\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Bega\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Blacktown\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Blue Mountains\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Cabramatta\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Camden\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Campbelltown\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Canterbury\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Castle Hill\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Cessnock\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Charlestown\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Clarence\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Coffs Harbour\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Coogee\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Cootamundra\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Cronulla\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Davidson\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Drummoyne\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Dubbo\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"East Hills\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Epping\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Fairfield\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Gosford\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Goulburn\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Granville\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Hawkesbury\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Heathcote\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Heffron\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Holsworthy\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Hornsby\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Keira\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Kiama\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Kogarah\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Ku-ring-gai\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Lake Macquarie\",\n  incumbent: \"OTH\",\n  party: \"OTH\",\n  featured: false,\n}, {\n  name: \"Lakemba\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Lane Cove\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Lismore\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Liverpool\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Londonderry\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Macquarie Fields\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Maitland\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Manly\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Maroubra\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Miranda\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Monaro\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Mount Druitt\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Mulgoa\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Murray\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Myall Lakes\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Newcastle\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Newtown\",\n  incumbent: \"GRN\",\n  party: \"GRN\",\n  featured: false,\n}, {\n  name: \"North Shore\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Northern Tablelands\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Oatley\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Orange\",\n  incumbent: \"OTH\",\n  party: \"OTH\",\n  featured: false,\n}, {\n  name: \"Oxley\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Parramatta\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Penrith\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Pittwater\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Port Macquarie\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Port Stephens\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Prospect\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Riverstone\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Rockdale\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Ryde\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Seven Hills\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Shellharbour\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"South Coast\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Strathfield\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Summer Hill\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Swansea\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Sydney\",\n  incumbent: \"OTH\",\n  party: \"OTH\",\n  featured: false,\n}, {\n  name: \"Tamworth\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Terrigal\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"The Entrance\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Tweed\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Upper Hunter\",\n  incumbent: \"LNP\",\n  party: \"\",\n  featured: true,\n}, {\n  name: \"Vaucluse\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Wagga Wagga\",\n  incumbent: \"OTH\",\n  party: \"OTH\",\n  featured: false,\n}, {\n  name: \"Wakehurst\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Wallsend\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Willoughby\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Wollondilly\",\n  incumbent: \"LNP\",\n  party: \"LNP\",\n  featured: false,\n}, {\n  name: \"Wollongong\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}, {\n  name: \"Wyong\",\n  incumbent: \"ALP\",\n  party: \"ALP\",\n  featured: false,\n}];\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { filter, length, pipe, prop, propEq } from \"ramda\";\nimport { AppBar, IconButton, Tab, Tabs, Table, TableBody, TableCell, TableHead } from \"@material-ui/core\";\nimport { SwapHoriz, Star, ViewList } from \"@material-ui/icons\";\nimport {\n  Chip,\n  GenericIcon,\n  Select,\n  StarFilled,\n  StarBorder,\n  TableRow,\n  Wrapper,\n  useTabClasses,\n  useTabsClasses,\n  useTopBarClasses,\n  useBottomBarClasses,\n} from \"./tally.styles\";\nimport { useDistricts } from \"../hooks/use-districts\";\nimport {\n  districts as rawDistricts,\n  storageKey,\n} from \"../data\";\n\nconst filterChanging = filter(dist => dist.party && dist.party !== dist.incumbent);\nconst filterUndecided = filter(propEq(\"party\", \"\"));\nconst filterFeatured = filter(prop(\"featured\"));\nconst lengthWhere = pipe(filter, length);\n\nconst storage = localStorage.getItem(storageKey);\n\nconst Tally = () => {\n  const { districts, onPartyChange, onToggleFeatured } = useDistricts(\n    storage ? JSON.parse(storage) : rawDistricts,\n  );\n  const [filterValue, setFilterValue] = useState(0);\n  const filteredDistricts = useMemo(() => {\n    if (filterValue === 1) {\n      return filterChanging(districts);\n    }\n    if (filterValue === 2) {\n      return filterUndecided(districts);\n    }\n    if (filterValue === 3) {\n      return filterFeatured(districts);\n    }\n    return districts;\n  }, [districts, filterValue]);\n  const topBarClasses = useTopBarClasses();\n  const bottomBarClasses = useBottomBarClasses();\n  const tabClasses = useTabClasses();\n  const tabsClasses = useTabsClasses();\n\n  useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(districts));\n  }, [districts]);\n\n  return (\n    <Wrapper>\n      <AppBar position=\"fixed\" classes={topBarClasses} color=\"primary\">\n        <Tabs\n          classes={tabsClasses}\n          value={filterValue}\n          onChange={(event, value) => setFilterValue(value)}\n          scrollButtons=\"off\"\n        >\n          <Tab classes={tabClasses} label=\"All\" icon={<ViewList />} />\n          <Tab classes={tabClasses} label=\"Changing\" icon={<SwapHoriz />} />\n          <Tab classes={tabClasses} label=\"Undecided\" icon={<GenericIcon>?</GenericIcon>} />\n          <Tab classes={tabClasses} label=\"Featured\" icon={<Star />} />\n        </Tabs>\n      </AppBar>\n      <Table padding=\"none\">\n        <TableHead>\n          <TableRow>\n            <TableCell padding=\"dense\">District</TableCell>\n            <TableCell>Incumbent</TableCell>\n            <TableCell>Winner</TableCell>\n            <TableCell>Featured</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filteredDistricts.map(dist => (\n            <TableRow key={dist.id} party={dist.party}>\n              <TableCell component=\"th\" padding=\"dense\" scope=\"row\">\n                {dist.name}\n              </TableCell>\n              <TableCell>{dist.incumbent}</TableCell>\n              <TableCell>\n                <Select\n                  native\n                  onChange={({ target }) => onPartyChange(dist.id, target.value)}\n                  value={dist.party}\n                >\n                  <option value=\"\">UND</option>\n                  <option value=\"LNP\">LNP</option>\n                  <option value=\"ALP\">ALP</option>\n                  <option value=\"GRN\">GRN</option>\n                  <option value=\"OTH\">OTH</option>\n                </Select>\n              </TableCell>\n              <TableCell>\n                <IconButton onClick={() => onToggleFeatured(dist.id)}>\n                  {dist.featured ? <StarFilled /> : <StarBorder />}\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <AppBar position=\"fixed\" classes={bottomBarClasses} color=\"secondary\">\n        <Chip party=\"LNP\" label={`LNP ${lengthWhere(propEq(\"party\", \"LNP\"), districts)}`} />\n        <Chip party=\"ALP\" label={`ALP ${lengthWhere(propEq(\"party\", \"ALP\"), districts)}`} />\n        <Chip party=\"GRN\" label={`GRN ${lengthWhere(propEq(\"party\", \"GRN\"), districts)}`} />\n        <Chip party=\"OTH\" label={`OTH ${lengthWhere(propEq(\"party\", \"OTH\"), districts)}`} />\n        <Chip party=\"UND\" label={`UND ${lengthWhere(propEq(\"party\", \"\"), districts)}`} />\n      </AppBar>\n    </Wrapper>\n  );\n};\n\nexport default Tally;\n","import React from \"react\";\nimport Tally from \"./components/tally\";\n\nconst App = () => (\n  <div>\n    <header />\n    <Tally />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}